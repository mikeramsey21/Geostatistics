summarise(prop = sum(onTime)/n()) %>%
arrange(desc(prop))
# Question 4
q4 <- flights %>%
filter(dest=="DEN") %>%
mutate(onTime = ifelse(abs(arr_delay) <= 15, 1, 0)) %>%
drop_na(onTime) %>%
group_by(carrier) %>%
summarise(prop = sum(onTime)/n()) %>%
arrange(desc(prop))
View(q4)
load("C:/Users/mikee/OneDrive - UCB-O365/GitKraken/Geostatistics/UFO_scrubbed.RData")
setwd("C:/Users/mikee/OneDrive - UCB-O365/GitKraken/Geostatistics")
knitr::opts_chunk$set(echo = TRUE)
# Load tidyverse
library(tidyverse)
# Load workspace
load("UFO_scrubbed.RData")
head(ufo)
View(ufo)
str(ufo)
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar()
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = -1))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = 1))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = 2))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = -2))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))
unique(ufo$shape)
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = 2))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = -2))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = -1))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = -.5))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = -.2))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = -.1))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = -.05))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = -.02))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = -.01))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = 0))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))
unique(ufo$shape)
unique(ufo$shape)[15]
# Load tidyverse
library(tidyverse)
# Load workspace
load("UFO_scrubbed.RData")
head(ufo)
# Edit the blank shape
ufo <- ufo %>%
mutate(shape = ifelse(shape == "", "blank", shape))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))
levels(ufo$shape)
# Load tidyverse
library(tidyverse)
# Load workspace
load("UFO_scrubbed.RData")
head(ufo)
# Edit the blank shape
#ufo <- ufo %>%
#  mutate(shape = ifelse(shape == "", "blank", shape))
levels(ufo$shape)
# Load tidyverse
library(tidyverse)
# Load workspace
load("UFO_scrubbed.RData")
head(ufo)
# Edit the blank shape
ufo <- ufo %>%
mutate(shape = ifelse(shape == "", "blank", level(shape)))
# Load tidyverse
library(tidyverse)
# Load workspace
load("UFO_scrubbed.RData")
head(ufo)
# Edit the blank shape
ufo <- ufo %>%
mutate(shape = ifelse(shape == "", "blank", levels(shape)))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))
# Load tidyverse
library(tidyverse)
# Load workspace
load("UFO_scrubbed.RData")
head(ufo)
# Edit the blank shape
#ufo <- ufo %>%
#  mutate(shape = ifelse(shape == "", "blank", levels(shape)))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))
# Load tidyverse
library(tidyverse)
# Load workspace
load("UFO_scrubbed.RData")
head(ufo)
# Edit the blank cells for shape
ufo$shape <- sub("^$", "Blank", ufo$shape)
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = 0))
# Bar plots of shape
ggplot(data = ufo, aes(x = shape)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, vjust = 0)) +
ggtitle('Counts of UFOs by shape')
# Histogram of duration
ggplot(data = ufo, aes(x = duration.seconds)) +
geom_histogram()
max(duration.seconds)
max(ufo$duration.seconds)
max(ufo$duration.seconds,2)
max(ufo$duration.seconds,3)
ufo %>%
filter(duration.seconds < 1000000) %>%
count()
ufo %>%
filter(duration.seconds < 100000) %>%
count()
ufo %>%
filter(duration.seconds < 10000) %>%
count()
ufo %>%
filter(duration.seconds < 1000) %>%
count()
# Load tidyverse
library(tidyverse)
# Load workspace
load("UFO_scrubbed.RData")
head(ufo)
# Edit the blank cells for shape
ufo$shape <- sub("^$", "Blank", ufo$shape)
# Filter seconds less than 10000
ufo10 <- ufo %>%
filter(duration.seconds < 10000)
# Histogram of duration
ggplot(data = ufo10, aes(x = duration.seconds)) +
geom_histogram(bins)
# Histogram of duration
ggplot(data = ufo10, aes(x = duration.seconds)) +
geom_histogram(bins = 100)
# Filter seconds less than 10000
ufo10 <- ufo %>%
filter(duration.seconds < 2500)
# Histogram of duration
ggplot(data = ufo10, aes(x = duration.seconds)) +
geom_histogram()
# Filter seconds less than 10000
ufo10 <- ufo %>%
filter(duration.seconds < 2500)
# Histogram of duration
ggplot(data = ufo10, aes(x = duration.seconds)) +
geom_histogram()
# Filter seconds less than 10000
ufo10 <- ufo %>%
filter(duration.seconds < 2500)
# Histogram of duration
ggplot(data = ufo10, aes(x = log(duration.seconds))) +
geom_histogram()
# Histogram of duration
ggplot(data = ufo10, aes(x = log(duration.seconds))) +
geom_histogram() +
scale_y_continuous(limits = c(0,8))
# Histogram of duration
ggplot(data = ufo10, aes(x = log(duration.seconds))) +
geom_histogram() +
scale_x_continuous(limits = c(0,8))
# Histogram of duration
ggplot(data = ufo10, aes(x = log(duration.seconds))) +
geom_histogram() +
scale_x_continuous(limits = c(0,8)) +
ggtitle('Histogram of ln-duration')
# Histogram of duration
ggplot(data = ufo10, aes(x = log(duration.seconds))) +
geom_histogram(bins = 20) +
scale_x_continuous(limits = c(0,8)) +
ggtitle('Histogram of ln-duration')
# Histogram of duration
ggplot(data = ufo10, aes(x = log(duration.seconds))) +
geom_histogram(bins = 15) +
scale_x_continuous(limits = c(0,8)) +
ggtitle('Histogram of ln-duration')
library(fiftystater)
install.packages('fiftystater')
library(ggmap)
install.packages('ggmap')
library(ggmap)
?ggmap
# Get map of the US
map <- get_map(location = 'US')
# Get map of the US
map <-get_map(location='united states',
zoom=4,
maptype = "terrain",
source='google',
color='color')
# Get map of the US
map <-get_map(location='united states',
zoom=4,
maptype = "terrain",
color='color')
?register_google
install.packages('usmap')
library(usmap)
# Get map of the US
plot_usmap(data = statepop, values = "pop_2015", lines = "red") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right")
# Get map of the US
plot_usmap(data = statepop, values = "pop_2015", lines = "red") +
scale_fill_continuous(name = "Population (2015)", label = scales::comma) +
theme(legend.position = "right") +
geom_point(data = ufo, aes(x = latitude, y = longitude))
install.packages('maps')
library(maps)
#load us map data
all_states <- map_data("state")
#plot all states with ggplot
p <- ggplot()
p <- p + geom_polygon( data=all_states, aes(x=long, y=lat, group = group),colour="white", fill="grey10" )
p
#load us map data
all_states <- map_data("state")
#plot all states with ggplot
p <- ggplot()
p <- p + geom_polygon( data=all_states, aes(x=long, y=lat, group = group),colour="white", fill="grey10" ) + geom_point(data = ufo, aes(x = latitude, y = longitude))
p
# Count sightings by state
ufo_stae <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
View(ufo_state)
#load us map data
all_states <- map_data("state")
#plot all states with ggplot
p <- ggplot()
p <- p + geom_polygon( data=all_states, aes(x=long, y=lat, group = group),colour="white", fill="grey10" ) + geom_point(data = ufo, aes(x = longitude, y = latitude))
p
#load us map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot()
p <- p + geom_polygon( data=USmap, aes(x=long, y=lat, group = group),colour="white", fill="grey10" ) + geom_point(data = ufo, aes(x = longitude, y = latitude))
p
#load us map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot()+ geom_polygon( data=USmap, aes(x=long, y=lat, group = group),colour="white", fill="grey10" ) + geom_point(data = ufo, aes(x = longitude, y = latitude))
p
#load us map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, group = group), colour="black", fill="white" ) +
geom_point(data = ufo, aes(x = longitude, y = latitude), size = 1)
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("usa")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, group = group), colour="black", fill="white" ) +
geom_point(data = ufo, aes(x = longitude, y = latitude), size = 0)
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("states")
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, group = group), colour="black", fill="white" ) +
geom_point(data = ufo, aes(x = longitude, y = latitude), size = 0)
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, group = group), colour="black", fill="white" ) +
geom_point(data = ufo, aes(x = longitude, y = latitude), size = -1)
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, group = group), colour="black", fill="white" ) +
geom_point(data = ufo, aes(x = longitude, y = latitude), size = .05)
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, group = group), colour="black", fill="white" ) +
geom_point(data = ufo, aes(x = longitude, y = latitude), size = 0)
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, group = group), colour="black", fill="white", linetype = 'dashed') +
geom_point(data = ufo, aes(x = longitude, y = latitude), size = 0)
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, group = group),
colour="black", fill="white") +
geom_point(data = ufo, aes(x = longitude, y = latitude),
size = 0,
color = 'grey10')
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, group = group),
colour="black", fill="white") +
geom_point(data = ufo, aes(x = longitude, y = latitude),
size = 0,
color = 'grey')
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, group = group),
colour="black", fill="white") +
geom_point(data = ufo, aes(x = longitude, y = latitude),
size = 0,
color = 'blue')
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, color = group),
colour="black", fill="white") +
geom_point(data = ufo, aes(x = longitude, y = latitude),
size = 0,
color = 'blue') +
geom_
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, color = group),
colour="black", fill="white") +
geom_point(data = ufo, aes(x = longitude, y = latitude),
size = 0,
color = 'blue')
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat),
colour="black", fill="white") +
geom_point(data = ufo, aes(x = longitude, y = latitude),
size = 0,
color = 'blue')
# Count sightings by state
ufo_state <- ufo %>%
group_by(state) %>%
summarise(Count = n())
ufo_state
# Load US map data
USmap <- map_data("state")
#plot all states with ggplot
ggplot() +
geom_polygon(data=USmap, aes(x=long, y=lat, group = group),
colour="black", fill="white") +
geom_point(data = ufo, aes(x = longitude, y = latitude),
size = 0,
color = 'blue')
install.packages('urbnmapr')
devtools::install_github(“UrbanInstitute/urbnmapr”)
install.packages('devtools')
devtools::install_github(“UrbanInstitute/urbnmapr”)
library(devtools)
devtools::install_github(“UrbanInstitute/urbnmapr”)
install_github(“UrbanInstitute/urbnmapr”)
?install_github
install_github("UrbanInstitute/urbnmapr")
library(urbanmapr)
install_github("UrbanInstitute/urbnmapr")
